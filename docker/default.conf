# Default server configuration for Vue.js SPA
# Handles static file serving, API proxying, and SPA routing

# Upstream for backend API (adjust URL as needed)
upstream backend_api {
    server backend:3000;
    keepalive 32;
}

# Main server block
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security and rate limiting
    limit_conn perip 10;
    limit_conn perserver 100;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API proxy configuration
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;

        # Proxy headers
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer configuration
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Authentication endpoints (NextAuth.js)
    location /auth/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Longer timeout for auth operations
        proxy_read_timeout 120s;
    }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        limit_req zone=static burst=100 nodelay;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Enable compression for these files
        gzip_static on;
        
        # Security headers for assets
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Try to serve file directly, otherwise fall back to index.html
        try_files $uri $uri/ @fallback;
    }

    # Handle manifest.json and other PWA files
    location ~* \.(webmanifest|json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options nosniff;
        
        try_files $uri $uri/ @fallback;
    }

    # Handle Vue Router routes (SPA fallback)
    location / {
        # Try to serve file directly, otherwise fall back to index.html
        try_files $uri $uri/ @fallback;
        
        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Fallback for SPA routing
    location @fallback {
        rewrite ^.*$ /index.html last;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Security: deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to common sensitive files
    location ~ \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Handle favicon requests
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Custom error pages (optional)
    # error_page 404 /404.html;
    # error_page 500 502 503 504 /50x.html;

    # Compression for specific locations
    location ~* \.(html|htm)$ {
        gzip on;
        gzip_types text/html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
}